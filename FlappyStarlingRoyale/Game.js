/**
 * Generated by Apache Royale Compiler from Game.as
 * Game
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Game');
/* Royale Dependency List: TitleOverlay,World,openfl.net.SharedObject,org.apache.royale.utils.Language*/




/**
 * @constructor
 * @extends {starling.display.Sprite}
 */
Game = function() {
  Game.base(this, 'constructor');
  this.Game__sharedObject = openfl.net.SharedObject.getLocal("flappy-data");
};
goog.inherits(Game, starling.display.Sprite);


/**
 * @private
 * @type {starling.assets.AssetManager}
 */
Game.sAssets = null;


Game.get__sDefaultTextFormat = function() {
  var value = new starling.text.TextFormat("bradybunch", starling.text.BitmapFont.NATIVE_SIZE, starling.utils.Color.WHITE);
  Object.defineProperties(Game, { sDefaultTextFormat: { value: value, writable: true }});
  return value;
};
Game.set__sDefaultTextFormat = function(value) {
  Object.defineProperties(Game, { sDefaultTextFormat: { value: value, writable: true }});
};
/**
 * @private
 * @type {starling.text.TextFormat}
 */
Game.sDefaultTextFormat;

Object.defineProperties(Game, /** @lends {Game} */ {
/**
 * @private
 * @type {starling.text.TextFormat}
 */
sDefaultTextFormat: {
  get: Game.get__sDefaultTextFormat,
  set: Game.set__sDefaultTextFormat,
  configurable: true}});


/**
 * @private
 * @type {World}
 */
Game.prototype.Game__world = null;


/**
 * @private
 * @type {number}
 */
Game.prototype.Game__score = 0;


/**
 * @private
 * @type {starling.text.TextField}
 */
Game.prototype.Game__scoreLabel = null;


/**
 * @private
 * @type {TitleOverlay}
 */
Game.prototype.Game__title = null;


/**
 * @private
 * @type {openfl.net.SharedObject}
 */
Game.prototype.Game__sharedObject = null;


/**
 * @param {starling.assets.AssetManager} assets
 */
Game.prototype.start = function(assets) {
  Game.sAssets = assets;
  this.Game__world = new World(this.stage.stageWidth, this.stage.stageHeight);
  this.Game__world.addEventListener(World.BIRD_CRASHED, org.apache.royale.utils.Language.closure(this.Game_onBirdCollided, this, 'Game_onBirdCollided'));
  this.Game__world.addEventListener(World.OBSTACLE_PASSED, org.apache.royale.utils.Language.closure(this.Game_onObstaclePassed, this, 'Game_onObstaclePassed'));
  this.addChild(this.Game__world);
  this.Game__scoreLabel = new starling.text.TextField(100, 80, "", Game.sDefaultTextFormat);
  this.Game__scoreLabel.visible = false;
  this.addChild(this.Game__scoreLabel);
  this.Game__title = new TitleOverlay(this.stage.stageWidth, this.stage.stageHeight);
  this.addChild(this.Game__title);
  this.addEventListener(starling.events.Event.ENTER_FRAME, org.apache.royale.utils.Language.closure(this.Game_onEnterFrame, this, 'Game_onEnterFrame'));
  this.stage.addEventListener(starling.events.TouchEvent.TOUCH, org.apache.royale.utils.Language.closure(this.Game_onTouch, this, 'Game_onTouch'));
  this.Game_showTitle();
};


/**
 * @private
 */
Game.prototype.Game_restart = function() {
  this.Game__scoreLabel.visible = false;
  this.Game__world.reset();
  this.Game_showTitle();
};


/**
 * @private
 */
Game.prototype.Game_showTitle = function() {
  this.Game__title.alpha = 0;
  this.Game__title.topScore = this.Game_topScore;
  starling.core.Starling.current.juggler.tween(this.Game__title, 1.0, {alpha:1.0});
};


/**
 * @private
 */
Game.prototype.Game_hideTitle = function() {
  starling.core.Starling.current.juggler.removeTweens(this.Game__title);
  starling.core.Starling.current.juggler.tween(this.Game__title, 0.5, {alpha:0.0});
};


/**
 * @private
 * @param {starling.events.Event} event
 * @param {number} passedTime
 */
Game.prototype.Game_onEnterFrame = function(event, passedTime) {
  this.Game__world.advanceTime(passedTime);
};


/**
 * @private
 */
Game.prototype.Game_onBirdCollided = function() {
  if (this.Game__score > this.Game_topScore)
    this.Game_topScore = this.Game__score;
  starling.core.Starling.current.juggler.delayCall(org.apache.royale.utils.Language.closure(this.Game_restart, this, 'Game_restart'), 1.5);
  Game.assets.playSound("crash");
};


/**
 * @private
 */
Game.prototype.Game_onObstaclePassed = function() {
  this.Game_score += 1;
  Game.assets.playSound("pass");
};


/**
 * @private
 * @param {starling.events.TouchEvent} event
 */
Game.prototype.Game_onTouch = function(event) {
  var /** @type {starling.events.Touch} */ touch = event.getTouch(this.stage, starling.events.TouchPhase.BEGAN);
  if (touch) {
    if (this.Game__world.phase == World.PHASE_IDLE) {
      this.Game_hideTitle();
      this.Game_score = 0;
      this.Game__scoreLabel.visible = true;
      this.Game__world.start();
    }
    if (this.Game__world.phase == World.PHASE_PLAYING) {
      this.Game__world.flapBird();
      Game.assets.playSound("flap");
    }
  }
};


/**
 * @type {number}
 */
Game.prototype.Game_score;


Game.prototype.get__Game_score = function() {
  return this.Game__score;
};


Game.prototype.set__Game_score = function(value) {
  this.Game__score = value;
  this.Game__scoreLabel.text = value.toString();
};


/**
 * @type {number}
 */
Game.prototype.Game_topScore;


Game.prototype.get__Game_topScore = function() {
  return org.apache.royale.utils.Language._int(this.Game__sharedObject.data["topScore"]);
};


Game.prototype.set__Game_topScore = function(value) {
  this.Game__sharedObject.data["topScore"] = value;
};


Object.defineProperties(Game.prototype, /** @lends {Game.prototype} */ {
/**
 * @type {number}
 */
Game_score: {
get: Game.prototype.get__Game_score,
set: Game.prototype.set__Game_score},
/**
 * @type {number}
 */
Game_topScore: {
get: Game.prototype.get__Game_topScore,
set: Game.prototype.set__Game_topScore}}
);


/**
 * @nocollapse
 * @export
 * @type {starling.assets.AssetManager}
 */
Game.assets;


Game.get__assets = function() {
  return Game.sAssets;
};


Object.defineProperties(Game, /** @lends {Game} */ {
/**
 * @type {starling.assets.AssetManager}
 */
assets: {
get: Game.get__assets}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Game.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Game', qName: 'Game', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Game.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        '|assets': { type: 'starling.assets.AssetManager', access: 'readonly', declaredBy: 'Game'}
      };
    },
    methods: function () {
      return {
        'Game': { type: '', declaredBy: 'Game'},
        'start': { type: 'void', declaredBy: 'Game', parameters: function () { return [ 'starling.assets.AssetManager', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Game.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
Game.prototype.ROYALE_INITIAL_STATICS = Object.keys(Game);

//# sourceMappingURL=./Game.js.map
