/**
 * Generated by Apache Royale Compiler from TitleOverlay.as
 * TitleOverlay
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('TitleOverlay');
/* Royale Dependency List: Game*/




/**
 * @constructor
 * @extends {starling.display.Sprite}
 * @param {number} width
 * @param {number} height
 */
TitleOverlay = function(width, height) {
  TitleOverlay.base(this, 'constructor');
  var /** @type {starling.text.TextField} */ title = new starling.text.TextField(width, 200, "Flappy\nStarling");
  title.format.setTo("bradybunch", starling.text.BitmapFont.NATIVE_SIZE, starling.utils.Color.WHITE);
  title.format.leading = -20;
  var /** @type {starling.display.Image} */ tapIndicator = new starling.display.Image(Game.assets.getTexture("tap-indicator"));
  tapIndicator.x = width / 2;
  tapIndicator.y = (height - tapIndicator.height) / 2;
  this.TitleOverlay__topScoreLabel = new starling.text.TextField(width, 50, "");
  this.TitleOverlay__topScoreLabel.format.setTo(starling.text.BitmapFont.MINI, starling.text.BitmapFont.NATIVE_SIZE * 2);
  this.TitleOverlay__topScoreLabel.y = height * 0.80;
  this.addChild(title);
  this.addChild(tapIndicator);
  this.addChild(this.TitleOverlay__topScoreLabel);
};
goog.inherits(TitleOverlay, starling.display.Sprite);


/**
 * @private
 * @type {starling.text.TextField}
 */
TitleOverlay.prototype.TitleOverlay__topScoreLabel = null;


/**
 * @private
 * @type {number}
 */
TitleOverlay.prototype.TitleOverlay__topScore = 0;


/**
 * @nocollapse
 * @export
 * @type {number}
 */
TitleOverlay.prototype.topScore;


TitleOverlay.prototype.get__topScore = function() {
  return this.TitleOverlay__topScore;
};


TitleOverlay.prototype.set__topScore = function(value) {
  this.TitleOverlay__topScore = value;
  this.TitleOverlay__topScoreLabel.text = "Current Record: " + value;
};


Object.defineProperties(TitleOverlay.prototype, /** @lends {TitleOverlay.prototype} */ {
/**
 * @type {number}
 */
topScore: {
get: TitleOverlay.prototype.get__topScore,
set: TitleOverlay.prototype.set__topScore}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
TitleOverlay.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TitleOverlay', qName: 'TitleOverlay', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
TitleOverlay.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'topScore': { type: 'int', access: 'readwrite', declaredBy: 'TitleOverlay'}
      };
    },
    methods: function () {
      return {
        'TitleOverlay': { type: '', declaredBy: 'TitleOverlay', parameters: function () { return [ 'Number', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
TitleOverlay.prototype.ROYALE_COMPILE_FLAGS = 9;

//# sourceMappingURL=./TitleOverlay.js.map
