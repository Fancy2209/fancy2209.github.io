/* Royale Dependency List: */
/**
 * Generated by Apache Royale Compiler from /home/joshua/Development/Haxe/openfl/lib/openfl/display/Stage.as
 * openfl.display.Stage
 *
 * @fileoverview
 * @externs
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

/** @const */
var openfl = {};
/** @const */
openfl.display = {};

/**
 * @constructor
 * @extends {openfl.display.DisplayObjectContainer}
 * @param {number=} width
 * @param {number=} height
 * @param {Object=} color
 * @param {Object=} documentClass
 * @param {Object=} windowConfig
 */
openfl.display.Stage = function(width, height, color, documentClass, windowConfig) {
};


/**
 * @export
 * @type {string}
 */
openfl.display.Stage.prototype.align = null;


/**
 * @protected
 * @return {number}
 */
openfl.display.Stage.prototype.get_color = function() {
  return 0;
};


/**
 * @protected
 * @param {number} value
 * @return {number}
 */
openfl.display.Stage.prototype.set_color = function(value) {
  return 0;
};


/**
 * @protected
 * @return {number}
 */
openfl.display.Stage.prototype.get_contentsScaleFactor = function() {
  return 0;
};


/**
 * @export
 * @type {string}
 */
openfl.display.Stage.prototype.displayState = null;


/**
 * @protected
 * @return {string}
 */
openfl.display.Stage.prototype.get_displayState = function() {
  return null;
};


/**
 * @protected
 * @param {string} value
 * @return {string}
 */
openfl.display.Stage.prototype.set_displayState = function(value) {
  return null;
};


/**
 * @export
 * @type {openfl.display.InteractiveObject}
 */
openfl.display.Stage.prototype.focus = null;


/**
 * @protected
 * @return {openfl.display.InteractiveObject}
 */
openfl.display.Stage.prototype.get_focus = function() {
  return null;
};


/**
 * @protected
 * @param {openfl.display.InteractiveObject} value
 * @return {openfl.display.InteractiveObject}
 */
openfl.display.Stage.prototype.set_focus = function(value) {
  return null;
};


/**
 * @protected
 * @return {number}
 */
openfl.display.Stage.prototype.get_frameRate = function() {
  return 0;
};


/**
 * @protected
 * @param {number} value
 * @return {number}
 */
openfl.display.Stage.prototype.set_frameRate = function(value) {
  return 0;
};


/**
 * @protected
 * @return {number}
 */
openfl.display.Stage.prototype.get_fullScreenHeight = function() {
  return 0;
};


/**
 * @protected
 * @return {number}
 */
openfl.display.Stage.prototype.get_fullScreenWidth = function() {
  return 0;
};


/**
 * @export
 * @type {string}
 */
openfl.display.Stage.prototype.quality = null;


/**
 * @protected
 * @return {string}
 */
openfl.display.Stage.prototype.get_quality = function() {
  return null;
};


/**
 * @protected
 * @param {string} value
 * @return {string}
 */
openfl.display.Stage.prototype.set_quality = function(value) {
  return null;
};


/**
 * @export
 * @type {string}
 */
openfl.display.Stage.prototype.scaleMode = null;


/**
 * @protected
 * @return {string}
 */
openfl.display.Stage.prototype.get_scaleMode = function() {
  return null;
};


/**
 * @protected
 * @param {string} value
 * @return {string}
 */
openfl.display.Stage.prototype.set_scaleMode = function(value) {
  return null;
};


/**
 * @export
 * @type {boolean}
 */
openfl.display.Stage.prototype.showDefaultContextMenu = false;


/**
 * @export
 * @type {boolean}
 */
openfl.display.Stage.prototype.stageFocusRect = false;


/**
  * @export
  * @type {boolean} */
openfl.display.Stage.prototype.allowsFullScreen;


/**
  * @export
  * @type {boolean} */
openfl.display.Stage.prototype.allowsFullScreenInteractive;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.color;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.contentsScaleFactor;


/**
  * @export
  * @type {*} */
openfl.display.Stage.prototype.element;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.frameRate;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.fullScreenHeight;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.fullScreenWidth;


/**
  * @export
  * @type {Array.<Stage3D>} */
openfl.display.Stage.prototype.stage3Ds;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.stageHeight;


/**
  * @export
  * @type {number} */
openfl.display.Stage.prototype.stageWidth;
